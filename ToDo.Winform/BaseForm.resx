<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEADQ0AAAAAAA1kGgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAGitJ
        REFUeNrtnXeAVMX9wD97u3t7x3H0joAgcBQFQZqgYBBIVMCeWIPR2EBFjZgEEok/O1GTYGKJCCqKGuyK
        ogIqohRRmhTpnJSDo95Rruze9/cHcF7Z3Xvv7czb3WM+8xewzJs33+/Mm5lvGTAYDAaDwWAwGAwGg8Fg
        MBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwJA1e0wVa8HEKDcijxHTFiUhjHmQN65hA
        c9MZJx51mUwJglDCRFJNh5xoXEY+cqz8RI/EbmyKkZdianMtNUv/1JzBpktOLAaxp3T8C8J3tHT1+T7q
        0oAG1Lf28fEZiSnFy1DqlfubLgzn3648O50enEpHuhAASljGMtawmENGLG6RwtlsLDf+BWEhrbU/uTaX
        8xZbKz17J29zGbWMaPQLoA0jeJ71x9b/ZUsxs7mPPjTDr+XZHjozjbxKzz1e8plGVyMiffgZyrus41BE
        EQhCDst5WMNckMKlrIj6ZEFYwkAjKD2kMpJdVQpAjp0LfEwLxeK/hM2Wnv0jQ42wdNCB9RbFLwhB7lKq
        fL8j2/Kz19DXiEs9nW2IQBCeVnb24uX37Lb17Jk0MwJTTS1etCGCPVyi6Ll+bmGHLfELIcbhMSJTTRbv
        cMCSALK5k4CSZ/oYVeHAyVpZSVsjMB2zwEVMYAWHI3R7MbksZDw9FR28+bmVnQ7ELxRykxGXHlI4hREs
        DdPpOxlPL4Vf31RudzT6j5YZpBth6aM731To8ALGKXW78XEH+x2LX1hIIyMmnVxW4UBoFa0U1u7nFpsr
        /4oll7ONkLz4S4tqp7jmfFuuw98jQ0m9HsDLrTFM/kfLIYaVn1BODOrSlDS8ZNKaBpxGOh48CMIR1nKI
        3WzkMIXsZyfFMT0ph0VlnEBK+FSRNU7wcwPjK9ga7ZNS3kxcnRXAS30y6UZr6tGLDnhJIZXMsAcxQfII
        EmIPK1jFepawgzxHTw3xJleUimkrCxW9jZ+RjKduzPWEKKj+4z3AaVzOoyxjPQcdTJMFbGI29zGYeg4O
        TurwUmlNjyoaYj5Gxjz5Hy3b6V6dRZ9JT0YznXUUKuisA8zmSYZQ32Yr2jCZnWzlPzSN+Y08gJ87FIlf
        mEed6in6DLoxlv+xi2JFXXW85DGTezjV1liuQR96kKZo9N/KPmVv85Kzs8gAWXRStJ5VT0N+w9tsUiz4
        8obcjfyLc+NwiOLnVnKVvcdBLnDSiCZMZCPZvECnhBN+a0YztwpnDFVlF1MZ4Kqnv5/RMe77y5dZNHYy
        uT5V6ug02wX/Nuu04G6WUeSK8H9eRD1BlkshdX5uUfbtF4QdzpzULyx39PhggsQTNuMmFrss/OOfg8Vk
        ufCGKdyodPQHecjJnqQm71YwKLaJu/DrMZJFHImD8I+vpE/S/o4+RrBNaavfcGYF6FfB462IG+Mq/DQG
        8lYchS+sZ4ALk//vLXsaWpu13nfmCeDhXkIVKns+jueHnZno0BKublP4Oxcm/xuUTv4lTHdqkmrIgkrV
        rYzTQrAm14S1t7tZCplADRdGv8rJP8R05+Fpl4Q5gihgZBzEfwr/jRL84FZ5RcFpfLT5FnzcpnTlH+IV
        ZyuWVOpzLvPDVrqJG6jn4n7Yy2C+jLvwhR/oon30j1T87Z9m3xcpnR5cw8t8TU7Eivcxl6lcS28XzsbS
        GBkm6i0eX/+rNb9pgNFKR38Jr9vPUdKf19hqcX9dyA6mcKrWTqnLI2USLsSzTNb89fdzp0XvYqtlun3x
        n2Uhzqximctp2joli9eU2PViL5s4I6lGf5DX7a/86/GJo4e9WiYnhhqOWuFPY1ZCCF8o4QFtJ6BHl363
        Kx39IaY6MUX35CdHj1unZWPYlS8SRPzCJq3LPz+3K933C9OdrfxPC5PewEpR6/l6lL4sTBjxCxM1xfYD
        pDJaob1fKOENp/v+DKY4euQTyreEffg+gcS/gzM1iv9OxeJ/PZbshO351KZHTYiZyj8APSq4Vsd//Z+q
        Tfx3KRV/kCmxJqdszijmsyNMqpPKZRfzGaM8C1Y75iSU+PO4SKP49ysV/4s0UdGwpvRiHNPZHvFBq5nK
        /Zyt5nHlaMEHCSV+YYETLxoL+BjJXqXin6S2pQH6R1iHv0MnTZui2kxKMPELD2oS/80Kff2EEC/QUH0z
        +4WxS+3mF5qmxDT+RkGCib+IazS8aQpXKT3zL2aKnnmqoj+QIMzQlHfOwy0JcuhbtmygnYY3vZQtiif/
        hmjilkoOIQ9relIv1iWc+IW3NFgALlLqwh5ksvO1WNW+PavZU067DrBIi/ibMT4B05cIczls8bfpdOAc
        GuKjiC/5JmJQ6Dk8ysnKWhhiCuPYpa8LavFhOX2bbztQygp+Hre08XR/BXC5xTfozotsK50t9/ByhBiK
        3nyndOn3kr7J/zhXlsl9E2KMlmcMjbOnX6SyzWKS1QFhjq6+oWcYNVmodPJ/UUH0YZU0YPIxzS5gihZ9
        a+jQCqm/fGkplLIPK8P+728rROL2Z5HipZ9L6V4a8RBrWMMftXjEeRiTIDb/yuVVC0ag5lHU96tSdxk/
        l/GjUvH/181sP37a0FqTO3gPW8lW3S2TLOT1HBXVevIFF9OfwTwWxcHOybf/vzSgWuDn6YQVv/AfCx/I
        qtxVD7KPvEqb6djEP1XV6I9/ipjeDE9g9Sys8hctqjwoUh1UH+JldRu/eCtAJrcl8N16QVZW+ZtTtWyL
        o4v/z+xUVV28bw0bwC8TePyHLCSK6ulqvoAgLzJWnfjjPQPUZERCZ6yxkiBqO+JaBu4SXuJP7FZZZXxn
        gH4Jf5FJ1f0zj70utSXEVMapFX98FSDAb2NOe6iXVAuWwG1sd6UtxTzLGJWTf/wVoLs2vwJ1VB1Xt5k3
        Ee3tCPIsfyVXfcXxUwAfl7txjh0j3iq/78I7rNcu/ucYzz4dVcdPAVowKOHFD2kWeugHnqFIYxtCTOI+
        PeKPpwIMokNSKEDVvo/CS7yi7TNQwHP8xbWFpmuk80oCHwD/XBZbPKZqxUwtzy/kcWpXN+EDtGdDUijA
        bvpZfKOOGiIZi/gnmdVR/HBbwhqAKxpdrSeFOIMlSp9dzL/1j/74rAH89HH1ANU5Xrpa7qPvGMNaZU8O
        MZn7OFA9x3971ibF+BeEWbac4IfavEc08uT/lMtGJlc5L+INe4lXfuJ0G2/m4XoF4V6HeUhT7EWCcKdS
        9wi9JcRttt7Nxz0x5i4v4gnlGVcSijTeThrxC8IHNlfiGdwfwwxXxJPVdeV/nJp8llQKsMv2TXsZPOIw
        xvEwf6/u4ofuDhPRxK88ZtviX5tJDgJdDnJ/9Rc/XJ+QMUDRynJOsf2WTZlm8z33MebEuNd3ZJKJXyhi
        lIP3bMGbtj40oxRdLZ/w/DXpFEBY4mAOgCxmWKx/B79LkJtYtBNgehIqQIiHHflPtuZVC2l3t3JV3N1z
        XaNRmBsIkqFstWwWKk997op67lnEJww+UUY/QDuH2UjjX6Y7NM146MozbAhzNrCfRYzWkGjLVuPcpj1z
        EjgUJBqFjOWflDj6vwFOohdnkU4t2hJiPYc5xCd8S86JM/aP0kHxXVhulmz6xzjcvKTRhEYELHgbuoIv
        Dk9M3uVOC8axiZ8c/38hRCixxrz7wkhN6gXPYO7XemvQCaAAyb3d8XAtdyeJM8sJII544GMUIxIgrN4o
        QNyoywNclRhLuGRUgBCSgP1gj8Y8wKXVY/C4/xKFhKpBv7VkItdVh7WA+yvyevy2Wvi7ZdKPwywnaBTA
        HnW4JqGTQlinBmfRkBUWsogYBShDChcov2MkXgToyWlsIzt51zXxUIALNSRgjxceTmEQQdZxxCiANUoY
        SLdqowAAtTiHjhxgezKuB9xXAKE9g6uVAoCPjpzPyexgl0Nr4QmgAF5qU5taNOQc+lYzBQBIpztDaMke
        9sY0E6RQFy/FbjVb/3lWgBZk0YKOdCEDH5k0VZ47M5HYzELe52u2OVADH825ggsoZAkr2cIq9mvNPaJZ
        AerQjl/Qm4600nzxeqJRwFqWMJPlZHPQ0qhvRjN60ZcsuhyzM4TIYxU7WMKnbNSXIUSPAgTozDD6cDqN
        TmBrQwE7Wc4SlvMD+RRzqNzlMwEy8ZFOO06nA11oQb2wJiZhJ6uZyRf8YPnymrgqQE368ht+maRuXzo4
        Qg6HCZLNWooIESKFVE6mPT4CNLF0LirkMJt3mac6U6BaBUinDzdyXjU56UtEVZrPVD5SeUWUR2FNPbiZ
        i6pzWoOEoJC5PM0sS2sLFxWgJddyg/JbxA3hyeM9/sX3Kg6gVZwDpDKcCYxI8Ly/ruHBo3t3HaAr5+Bj
        tYULLbTPAHUYxd26hF+bejSjK43xkYaXIEGKyeE7csiNeDOj+2TQhMb0pSEBAvgRCiggyHbmsYscPS4Q
        hbzLIyyLrwJ0ZSzDdAQ1Z5DFWQyjFQ2oXWEvKexlDyuYyWw2x9kQ5yeLvgymG3XCLH9K2EkunzOPr9mh
        4/EreIi34mWD8HCe4sx4x0pTuULelm1SItEJygp5UHpISpwCRdJlkDwtGyUkVXFEFsmf5GQdrdjNH+KT
        UcjPtUpvwD5WUuUi+UqOiHWyZbw0iYP4u8sU2WujnSFZLJeKT31LDvM49UD/0qMsadxNrvpObSZP2urU
        4zPBbDnTVeFnyCjZIPbZLY9KUx0JLJ51d/udzr0cUN+tfWVWldN+JDbICPG7JP6T5Xk57LCdIflA2qpv
        k6v3iPoZrUP8Q2SVxMJ++bOkuSD+TvKZxMYcydKRwuIFd4LWUhnNHvXd+ivZJLFyRP4iAc3ibydzJHbm
        SDsdH4J/2c9gYP8g6GoeVb/rz+LZcvdHHGQ181lFIQ1tmBN99GEv32rU/gb8gwvK/LmAjXzNaoRMW9Fi
        rTmFuardib2cTjEL9MZdnKsjx199ebXM6MiVJ2SwNJdU8ctJcrfNxdYW6att9PvlUQmWPqlA3pHLpK0E
        JFXayG/kSwvbwbL8XceaZT836twLtOMb9d3qlfFlunWdXFFhq9RLFtnq2Fk61tmCIMPL7FCK5DGpXWEH
        85wU2lCC/XKVjlZuYYgu8dfmRR0pHvvKttJOyZELwvxigGy1oQAl8rB4NXRtI/m8zDOelVphZrL3bKnq
        UmmjQwUWkKVD/F7+xBH1zU2XqWW65PGwokuRCbY6dqecq6Fjb5Ki0iesibCIGyC7bKnqREnVoQKTdZwN
        9merjmm1r+SWdkieDI7wq7Nkny0VeFXSFbezocwrU/8E8YT9VaZ8YqudO6SnDgU4yPVWxWp1iV2Pu3U4
        eaVwMQ1K/7SeVRF+t5Z1tuodQg/FLR1QJprlALMIb4LKZ4GtWpswXMeaLYOx9FarANfyKx3flablbo/P
        ZX+E3+XbvDO5ARcr7dhUhpVxbD4UxbJnN0zwQk7S0bGnWDURWVOATtyiJ5HxgHJhgk0iOhNm2D56+BVt
        FLazRblYlnpR7rxsZFPx2uu6QPmXnK9KAQKM1HXL56mklevmSEJrTVubNbdSqgCtaFzmT2m0j/C7mrbv
        lgjQXU/X1uJmKzlIrShAdy7T08ba9KnQ5kgfrr62HY1rOEztG+n55e9xGBTB8tKRU23X3buccinkbIaq
        UIBUrtPVwvq0KvdnLyPCjq1ujHRwZt1DWThSgC4V/qYf14XpuuY8QAvbtbfRFULh58qqJVe1AnTmPDSR
        Ue4DcHQE/V+lRdEZPBlxyo0+B6iKfPVVmn/83MuVFeo/mcccHcKl6fOm7VdujR3h3aLjZai+GJ+MSs6E
        KVxOMybyLdsIkk57BjLS9vf/+LhVpQDeMHNJff5JF95hDQfw0oo+jOJMR7Wn6bPiBvgt70fcWllSgJZc
        oS+6L1ApzZYHD2dzBptZyiEa0pPGjnMyqpwBwqUDa8A9XM9SskmjG20cb5P8OvPFd+N0vohFAYbqTOcS
        iPD4GnSik4Jxq0pzm0YQUQoNGBRz7R7a4UGTb3M9hjMvmtdw9D5KpRd+fQrgSZJ0m17NmWGDaHRtH0Kz
        aP8cXQFa0UvnixdpdWhXl5I0R49Pf2k7V+rs5JbRD4WjK0BXvUHeh2OPbIpCvrI8K0fI1zoMcnV2cibn
        R1sMRVMAHxfoTeaSrzW4q0iZb1RIVShuBPXag1baRttnRlOADN1JHvZxQGPtm5XNL4Vs1djOQt2pRrOi
        3XkYTQF66jqm/lkBVmgc/58p+wSE+FLjx2pFDHfQWKJutC1VNAVoqTvapICF2ta/B9iosLZVGueqFdFP
        amLHR7/Iq4BoCtAG7Sy2aee3ztyIziVOyGaJNkX9XH83t4hsFomsABluJHRdykIt9Qb5WOkCcx/vatqy
        rtLUA+VoGPlS+sgKUMONcMODvEaBhnrXRT//dMBH/KBFUadpmwPLcFJkt6PICuCrZKrTwsd8qbxO4RWl
        KwCAbKZpSAO8lPfc6OQoy8DIClDLnVDDfTyjfJc9n6kaFpdv8L3iGgt5TvcO4CjeyDGDkRWgtlsZfefw
        rtL68vi7lm7N5h+K9wKf8hYuEbCvACe7lXgkn0dYrrC+1/lUU0vfZJLCmWU9D7PPLQXw21eABnr8gMOx
        inHKzC1f8IiOlLoAFPE4MxTVdYD7bcYQxESqfQVw9SqJGYxTciC6knvYrLGdOYzhOwX1FDORN9zs4BaR
        LNqRFcBVU73wCo/EbHNbwC1KxBONNdwV8wF2AROY4N6dEAB17Q/o293Jt1M2+n6U7HGcc6NE3pH2LrW0
        V5k4Yfvsk3HKIxerLI/Z/wS4fvdNMc9yu80YwOPs40luZq1LLV3ECJ5xuNJYxvVMcP+KMQe2rJt05AKo
        upwub0uBzbG/UIbrCbOOGtZ+o6y3ncPoPekq8ehV/mJfAQbqyARmpdSVq+XzMrH40VktY6VlfDpVuskL
        kmOxncWyUEZInTi1lHvsK0BnPfkArGbjuFE+lJ1Ru3SvfCXjdCRcs1ECcpY8JWukMGpL98jnMkqax7Ol
        d0QSc+S1fjM+rhQR5SqZdGEYbelBY7x48QBCMSG2s4wtfMwyvd50FvHSinM5l/a0IQ3vseW2EKSYLaxh
        KV+wSrfbV3RKuJlJdhWgMR8qz7LggFQ60IY00vACQQ5RwAY26L5NzTZ+GpFFHdJIIwUhSAEHWcNPidDS
        PQznm/D/FNnh/Yh755TRKGK50oNiXRSzjW2J2rhNkY2jkbeB+VozLhrcJD+y00VkBRC2mJ6rJuyJrADR
        Yp5yOJzMN37WJxWJMfbAQz1SKWG/1hAWzQhfO1OAb/lBb2iYPmpzFddRixLWMpWPHZ68teEKLqImIebz
        DEuR5OyMAyx19h8DvI0kY6kh/y6zM8+TZxxYCdJlhCwtc3vBOrkwKfsCYWH08NBo898D8TkOjrVcJ4cq
        HMUskV9LDRs1tJVn5GCFOr7XkeLdjTLVuWm/L7uT74V95XKPHydfJls8h0+Xy2VxmBpCcmMyij/IXdFE
        HD06eBMbku+TlxrWCb4m1/EGd1YR7pjKOTzPJM4I21VnJEk+g3LsYHa0f46e+SCHhcm3DAxFcLXwkMUE
        rmQOH7CR3RUCPWrTiH4MYlCUxFr7k3EZuDC6h3x0BRA+4Kpkuw66kBVcEuHf/PSiF9eTw1xWU0yQID7S
        acTZtKZZVDfIfOXBJi5QzIzYvO5r8W7yffc6yxoLBtqQBKVYiqTY4iUPM6Vu8q0A1lWVYa+q9WEhBQyL
        7FOamOQiDKwyr4+HFFLwkmLpy76JP/Bj8s0ALzA9+ner6g3CHs5MvmvhV5FBT4WOzVu4g8+ST/zbGF9V
        bouq++gwcL7mNFnKKWY+qcpUIJvb+DD5xA+vMaWqPDlWeiiX/nqS2uukiAUcoZuCi81XcwcfJaP4c3mg
        ah9bKwqQz0GGuBcnpFIFfowxFXMebzKGr5JR/MIUXlCV1CCT/yXpObi0k+ds3jf0sxvnHLlYMpLVArCK
        jir1aRC7klUF0uU8eVP22xJ+oXwn90jjZBW+UMgf1E4oqTyRnIahoyVThsjTstmCs3mJ7JS35Fo5KXmF
        LwhvWs1Bb/1wuxUv0z8ZP4bH8dOWfgykF83xV1r8BCkil2Us4QPW6c7cp5u1XGE1q5Ud68ZApjq1LCcO
        qbSmLS3pTbtj7k7FFPAjC8hmG5s5kozn/eU5yBietfpjOwrgZSx/1Zk93E0CZBw73CghxKGEczN3jPA0
        f7TuB+e1VfVyGtAtGW2ilQlxhEMc4hCHKdB747q7zOVeO/Ey9o7KCvieTjqvkDDEyCbusBdGYfesNJ+V
        9Ez+lUA1ZQdj+Njef7F/WL6THZwVOe2YIW7s4c9Ms7uGdWItWUc2fallejyh2Md4ptg/+nVmLlvNds40
        KpBA5PI3nneylXFqL13NVnqbD0GCsIM/MsVZ1imnCiCsYj0daGp6P+5kcy/TnO5kY/GYWMt8mtBO38WS
        Bgss5k7ed358GZvLzE7mkMlpyeYvVG0o4SNuZ34sVcTqM3WYr9lHJ7MaiAN5PMVY5XnxHZDCQBYms7E4
        Kcv3/FrFjQ4qvCaFTczhAC3duWHAQC5TuJe5Khy+1Bl2UujBKIYZJdDMQebwNJ+rMl+qtexlMJBRDHDn
        spkTkHy+4WVmqLy3Qr1ptz7nc7U5J1ROHvOZwmfsVVutHtt+Xc7mYn5Bc7NBVECQnXzK63yrI3GfPueO
        VDrTh/PpQjOjBo5Fn80PzGAxK3VlqdLt3ZNBG3rSl3NIo56CMJ0TgxC7yWMWS5nHFq1XrLvk3pVOEzI4
        ldNpTh3a0/BY6l8PKaSdoEfJhaQQpAQQQCihhCOsJpdtbGQRu9nmxqUibvv3eQnQjIak4SWFFHw0KZ0X
        pPSSCm+UdnlieDOx8GtPmF+LhZqit0sq/TkHH0cowkOIo2lNiskjm0Oa7qg1GAwGg8FgMBgMBoPBYDAY
        DAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMCQ//w/x8lKXxASB+wAAAABJRU5ErkJggg==
</value>
  </data>
</root>