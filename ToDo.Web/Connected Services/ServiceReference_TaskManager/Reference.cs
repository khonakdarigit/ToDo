//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToDo.Web.ServiceReference_TaskManager {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/ToDo.WCF.EF")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTimeOffset> DoneDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.TaskLog> TaskLogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ToDo.Web.ServiceReference_TaskManager.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTimeOffset> DoneDate {
            get {
                return this.DoneDateField;
            }
            set {
                if ((this.DoneDateField.Equals(value) != true)) {
                    this.DoneDateField = value;
                    this.RaisePropertyChanged("DoneDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsComplete {
            get {
                return this.IsCompleteField;
            }
            set {
                if ((this.IsCompleteField.Equals(value) != true)) {
                    this.IsCompleteField = value;
                    this.RaisePropertyChanged("IsComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.TaskLog> TaskLogs {
            get {
                return this.TaskLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskLogsField, value) != true)) {
                    this.TaskLogsField = value;
                    this.RaisePropertyChanged("TaskLogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ToDo.Web.ServiceReference_TaskManager.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ToDo.WCF.EF")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTimeOffset> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.Task> TasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTimeOffset> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((this.GUIDField.Equals(value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.Task> Tasks {
            get {
                return this.TasksField;
            }
            set {
                if ((object.ReferenceEquals(this.TasksField, value) != true)) {
                    this.TasksField = value;
                    this.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskLog", Namespace="http://schemas.datacontract.org/2004/07/ToDo.WCF.EF")]
    [System.SerializableAttribute()]
    public partial class TaskLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ToDo.Web.ServiceReference_TaskManager.Task TaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ToDo.Web.ServiceReference_TaskManager.Task Task {
            get {
                return this.TaskField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskField, value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskVM", Namespace="http://schemas.datacontract.org/2004/07/ToDo.WCF.EF.ViewMdels")]
    [System.SerializableAttribute()]
    public partial class TaskVM : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTimeOffset> DoneDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskLogCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.TaskLogVM> TaskLogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTimeOffset> DoneDate {
            get {
                return this.DoneDateField;
            }
            set {
                if ((this.DoneDateField.Equals(value) != true)) {
                    this.DoneDateField = value;
                    this.RaisePropertyChanged("DoneDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsComplete {
            get {
                return this.IsCompleteField;
            }
            set {
                if ((this.IsCompleteField.Equals(value) != true)) {
                    this.IsCompleteField = value;
                    this.RaisePropertyChanged("IsComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskLogCount {
            get {
                return this.TaskLogCountField;
            }
            set {
                if ((this.TaskLogCountField.Equals(value) != true)) {
                    this.TaskLogCountField = value;
                    this.RaisePropertyChanged("TaskLogCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.TaskLogVM> TaskLogs {
            get {
                return this.TaskLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskLogsField, value) != true)) {
                    this.TaskLogsField = value;
                    this.RaisePropertyChanged("TaskLogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskLogVM", Namespace="http://schemas.datacontract.org/2004/07/ToDo.WCF.EF.ViewMdels")]
    [System.SerializableAttribute()]
    public partial class TaskLogVM : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference_TaskManager.IService_TaskManager")]
    public interface IService_TaskManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/GetTask", ReplyAction="http://tempuri.org/IService_TaskManager/GetTaskResponse")]
        ToDo.Web.ServiceReference_TaskManager.Task GetTask(Tasky.Models.Account.ServiceUserLoginModel loginModel, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/GetTask", ReplyAction="http://tempuri.org/IService_TaskManager/GetTaskResponse")]
        System.Threading.Tasks.Task<ToDo.Web.ServiceReference_TaskManager.Task> GetTaskAsync(Tasky.Models.Account.ServiceUserLoginModel loginModel, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/GetTaskVM", ReplyAction="http://tempuri.org/IService_TaskManager/GetTaskVMResponse")]
        ToDo.Web.ServiceReference_TaskManager.TaskVM GetTaskVM(Tasky.Models.Account.ServiceUserLoginModel loginModel, System.Guid userGuid, int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/GetTaskVM", ReplyAction="http://tempuri.org/IService_TaskManager/GetTaskVMResponse")]
        System.Threading.Tasks.Task<ToDo.Web.ServiceReference_TaskManager.TaskVM> GetTaskVMAsync(Tasky.Models.Account.ServiceUserLoginModel loginModel, System.Guid userGuid, int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/AddNewTask", ReplyAction="http://tempuri.org/IService_TaskManager/AddNewTaskResponse")]
        ToDo.Web.ServiceReference_TaskManager.Task AddNewTask(Tasky.Models.Account.ServiceUserLoginModel loginUser, ToDo.Web.ServiceReference_TaskManager.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/AddNewTask", ReplyAction="http://tempuri.org/IService_TaskManager/AddNewTaskResponse")]
        System.Threading.Tasks.Task<ToDo.Web.ServiceReference_TaskManager.Task> AddNewTaskAsync(Tasky.Models.Account.ServiceUserLoginModel loginUser, ToDo.Web.ServiceReference_TaskManager.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/GetAllTasks", ReplyAction="http://tempuri.org/IService_TaskManager/GetAllTasksResponse")]
        System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.Task> GetAllTasks(Tasky.Models.Account.ServiceUserLoginModel loginUser, System.Guid userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/GetAllTasks", ReplyAction="http://tempuri.org/IService_TaskManager/GetAllTasksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.Task>> GetAllTasksAsync(Tasky.Models.Account.ServiceUserLoginModel loginUser, System.Guid userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/GetAllTasksVM", ReplyAction="http://tempuri.org/IService_TaskManager/GetAllTasksVMResponse")]
        System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.TaskVM> GetAllTasksVM(Tasky.Models.Account.ServiceUserLoginModel loginUser, System.Guid userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/GetAllTasksVM", ReplyAction="http://tempuri.org/IService_TaskManager/GetAllTasksVMResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.TaskVM>> GetAllTasksVMAsync(Tasky.Models.Account.ServiceUserLoginModel loginUser, System.Guid userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/UpdateTask", ReplyAction="http://tempuri.org/IService_TaskManager/UpdateTaskResponse")]
        ToDo.Web.ServiceReference_TaskManager.Task UpdateTask(Tasky.Models.Account.ServiceUserLoginModel loginUser, ToDo.Web.ServiceReference_TaskManager.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/UpdateTask", ReplyAction="http://tempuri.org/IService_TaskManager/UpdateTaskResponse")]
        System.Threading.Tasks.Task<ToDo.Web.ServiceReference_TaskManager.Task> UpdateTaskAsync(Tasky.Models.Account.ServiceUserLoginModel loginUser, ToDo.Web.ServiceReference_TaskManager.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/DeleteTask", ReplyAction="http://tempuri.org/IService_TaskManager/DeleteTaskResponse")]
        bool DeleteTask(Tasky.Models.Account.ServiceUserLoginModel loginUser, ToDo.Web.ServiceReference_TaskManager.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_TaskManager/DeleteTask", ReplyAction="http://tempuri.org/IService_TaskManager/DeleteTaskResponse")]
        System.Threading.Tasks.Task<bool> DeleteTaskAsync(Tasky.Models.Account.ServiceUserLoginModel loginUser, ToDo.Web.ServiceReference_TaskManager.Task task);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService_TaskManagerChannel : ToDo.Web.ServiceReference_TaskManager.IService_TaskManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service_TaskManagerClient : System.ServiceModel.ClientBase<ToDo.Web.ServiceReference_TaskManager.IService_TaskManager>, ToDo.Web.ServiceReference_TaskManager.IService_TaskManager {
        
        public Service_TaskManagerClient() {
        }
        
        public Service_TaskManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service_TaskManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service_TaskManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service_TaskManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ToDo.Web.ServiceReference_TaskManager.Task GetTask(Tasky.Models.Account.ServiceUserLoginModel loginModel, int id) {
            return base.Channel.GetTask(loginModel, id);
        }
        
        public System.Threading.Tasks.Task<ToDo.Web.ServiceReference_TaskManager.Task> GetTaskAsync(Tasky.Models.Account.ServiceUserLoginModel loginModel, int id) {
            return base.Channel.GetTaskAsync(loginModel, id);
        }
        
        public ToDo.Web.ServiceReference_TaskManager.TaskVM GetTaskVM(Tasky.Models.Account.ServiceUserLoginModel loginModel, System.Guid userGuid, int taskId) {
            return base.Channel.GetTaskVM(loginModel, userGuid, taskId);
        }
        
        public System.Threading.Tasks.Task<ToDo.Web.ServiceReference_TaskManager.TaskVM> GetTaskVMAsync(Tasky.Models.Account.ServiceUserLoginModel loginModel, System.Guid userGuid, int taskId) {
            return base.Channel.GetTaskVMAsync(loginModel, userGuid, taskId);
        }
        
        public ToDo.Web.ServiceReference_TaskManager.Task AddNewTask(Tasky.Models.Account.ServiceUserLoginModel loginUser, ToDo.Web.ServiceReference_TaskManager.Task task) {
            return base.Channel.AddNewTask(loginUser, task);
        }
        
        public System.Threading.Tasks.Task<ToDo.Web.ServiceReference_TaskManager.Task> AddNewTaskAsync(Tasky.Models.Account.ServiceUserLoginModel loginUser, ToDo.Web.ServiceReference_TaskManager.Task task) {
            return base.Channel.AddNewTaskAsync(loginUser, task);
        }
        
        public System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.Task> GetAllTasks(Tasky.Models.Account.ServiceUserLoginModel loginUser, System.Guid userGuid) {
            return base.Channel.GetAllTasks(loginUser, userGuid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.Task>> GetAllTasksAsync(Tasky.Models.Account.ServiceUserLoginModel loginUser, System.Guid userGuid) {
            return base.Channel.GetAllTasksAsync(loginUser, userGuid);
        }
        
        public System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.TaskVM> GetAllTasksVM(Tasky.Models.Account.ServiceUserLoginModel loginUser, System.Guid userGuid) {
            return base.Channel.GetAllTasksVM(loginUser, userGuid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ToDo.Web.ServiceReference_TaskManager.TaskVM>> GetAllTasksVMAsync(Tasky.Models.Account.ServiceUserLoginModel loginUser, System.Guid userGuid) {
            return base.Channel.GetAllTasksVMAsync(loginUser, userGuid);
        }
        
        public ToDo.Web.ServiceReference_TaskManager.Task UpdateTask(Tasky.Models.Account.ServiceUserLoginModel loginUser, ToDo.Web.ServiceReference_TaskManager.Task task) {
            return base.Channel.UpdateTask(loginUser, task);
        }
        
        public System.Threading.Tasks.Task<ToDo.Web.ServiceReference_TaskManager.Task> UpdateTaskAsync(Tasky.Models.Account.ServiceUserLoginModel loginUser, ToDo.Web.ServiceReference_TaskManager.Task task) {
            return base.Channel.UpdateTaskAsync(loginUser, task);
        }
        
        public bool DeleteTask(Tasky.Models.Account.ServiceUserLoginModel loginUser, ToDo.Web.ServiceReference_TaskManager.Task task) {
            return base.Channel.DeleteTask(loginUser, task);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTaskAsync(Tasky.Models.Account.ServiceUserLoginModel loginUser, ToDo.Web.ServiceReference_TaskManager.Task task) {
            return base.Channel.DeleteTaskAsync(loginUser, task);
        }
    }
}
